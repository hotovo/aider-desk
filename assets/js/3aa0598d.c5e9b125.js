"use strict";(self.webpackChunkaider_desk_docs=self.webpackChunkaider_desk_docs||[]).push([[178],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}},9921:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"customization/extra-python-packages","title":"Extra Python Packages","description":"The AIDERDESKEXTRAPYTHONPACKAGES environment variable allows you to install additional Python packages into AiderDesk\'s virtual environment. This can be useful for a few reasons:","source":"@site/docs/customization/extra-python-packages.md","sourceDirName":"customization","slug":"/customization/extra-python-packages","permalink":"/docs/docs/customization/extra-python-packages","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Extra Python Packages","sidebar_label":"Extra Python Packages"},"sidebar":"docsSidebar","previous":{"title":"Custom Aider Version","permalink":"/docs/docs/customization/custom-aider-version"},"next":{"title":"Telemetry","permalink":"/docs/docs/customization/telemetry"}}');var a=s(4848),t=s(8453);const r={sidebar_position:2,title:"Extra Python Packages",sidebar_label:"Extra Python Packages"},o="AIDER_DESK_EXTRA_PYTHON_PACKAGES",l={},c=[{value:"How to Use",id:"how-to-use",level:2},{value:"Examples",id:"examples",level:2},{value:"Overriding a Dependency",id:"overriding-a-dependency",level:3},{value:"Installing a New Package",id:"installing-a-new-package",level:3},{value:"Combining Multiple Packages",id:"combining-multiple-packages",level:3},{value:"Important Notes",id:"important-notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"aider_desk_extra_python_packages",children:"AIDER_DESK_EXTRA_PYTHON_PACKAGES"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"AIDER_DESK_EXTRA_PYTHON_PACKAGES"})," environment variable allows you to install additional Python packages into AiderDesk's virtual environment. This can be useful for a few reasons:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Installing new libraries that you want to be available to ",(0,a.jsx)(n.code,{children:"aider"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Overriding specific versions of ",(0,a.jsx)(n.code,{children:"aider"}),"'s dependencies."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,a.jsxs)(n.p,{children:["You can set this environment variable before launching AiderDesk. The value should be a comma-separated list of Python packages as you would specify them for ",(0,a.jsx)(n.code,{children:"pip install"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"macOS/Linux:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'export AIDER_DESK_EXTRA_PYTHON_PACKAGES="package1,package2==1.2.3"\n./AiderDesk-*.AppImage\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Windows (Command Prompt):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmd",children:'set AIDER_DESK_EXTRA_PYTHON_PACKAGES="package1,package2==1.2.3"\nAiderDesk.exe\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Windows (PowerShell):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-powershell",children:'$env:AIDER_DESK_EXTRA_PYTHON_PACKAGES="package1,package2==1.2.3"\n.\\AiderDesk.exe\n'})}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"overriding-a-dependency",children:"Overriding a Dependency"}),"\n",(0,a.jsxs)(n.p,{children:["Aider uses the ",(0,a.jsx)(n.code,{children:"Pygments"})," library for code analysis and token counting. If you want to use the very latest, unreleased version of ",(0,a.jsx)(n.code,{children:"Pygments"})," directly from their git repository, you can do so like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'export AIDER_DESK_EXTRA_PYTHON_PACKAGES="git+https://github.com/pygments/pygments.git@master"\n'})}),"\n",(0,a.jsx)(n.p,{children:"When you start AiderDesk, it will install the specified version of Pygments."}),"\n",(0,a.jsx)(n.h3,{id:"installing-a-new-package",children:"Installing a New Package"}),"\n",(0,a.jsxs)(n.p,{children:["If you need to install a package like ",(0,a.jsx)(n.code,{children:"scikit-learn"}),", you can specify it:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'export AIDER_DESK_EXTRA_PYTHON_PACKAGES="scikit-learn"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"combining-multiple-packages",children:"Combining Multiple Packages"}),"\n",(0,a.jsx)(n.p,{children:"You can provide a comma-separated list to install or override multiple packages at once:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'export AIDER_DESK_EXTRA_PYTHON_PACKAGES="scikit-learn==1.0.2,pandas,git+https://github.com/pygments/pygments.git@master"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Packages are installed using ",(0,a.jsx)(n.code,{children:"uv pip install"}),". Any format that ",(0,a.jsx)(n.code,{children:"uv"})," and ",(0,a.jsx)(n.code,{children:"pip"})," accept should work."]}),"\n",(0,a.jsx)(n.li,{children:"The packages are installed into a dedicated virtual environment managed by AiderDesk, so they will not affect your system's global Python installation."}),"\n",(0,a.jsx)(n.li,{children:"If you make a mistake, you can simply unset the environment variable and restart AiderDesk. On the next start, it may try to re-install the default dependencies if needed."}),"\n",(0,a.jsxs)(n.li,{children:["For a clean installation, you can remove the virtual environment directory (",(0,a.jsx)(n.code,{children:".aider-desk/python_venvs/aider-desk-env"})," inside your home directory) and let AiderDesk recreate it on the next start."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);