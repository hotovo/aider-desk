"use strict";(self.webpackChunkaider_desk_docs=self.webpackChunkaider_desk_docs||[]).push([[465],{3532:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"core-features/commands-reference","title":"Built-in Commands","description":"AiderDesk provides a set of built-in commands that you can use in the prompt field to perform various actions quickly. To use a command, simply type / followed by the command name.","source":"@site/docs/core-features/commands-reference.md","sourceDirName":"core-features","slug":"/core-features/commands-reference","permalink":"/docs/core-features/commands-reference","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Built-in Commands","sidebar_label":"Commands"},"sidebar":"docsSidebar","previous":{"title":"Chat Modes","permalink":"/docs/core-features/chat-modes"},"next":{"title":"Custom Commands","permalink":"/docs/core-features/custom-commands"}}');var r=s(4848),i=s(8453);const o={sidebar_position:5,title:"Built-in Commands",sidebar_label:"Commands"},l="Built-in Commands Reference",d={},c=[{value:"Core Commands",id:"core-commands",level:2},{value:"Chat &amp; Context Management",id:"chat--context-management",level:2},{value:"Mode Switching",id:"mode-switching",level:2},{value:"Model &amp; Aider Control",id:"model--aider-control",level:2},{value:"Other Utilities",id:"other-utilities",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"built-in-commands-reference",children:"Built-in Commands Reference"})}),"\n",(0,r.jsxs)(n.p,{children:["AiderDesk provides a set of built-in commands that you can use in the prompt field to perform various actions quickly. To use a command, simply type ",(0,r.jsx)(n.code,{children:"/"})," followed by the command name."]}),"\n",(0,r.jsx)(n.h2,{id:"core-commands",children:"Core Commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/add"}),": Adds one or more files to the chat context. You can specify file paths separated by spaces.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/add src/main.js src/utils.js"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/drop"}),": Removes one or more files from the chat context.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/drop src/main.js"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/read-only"}),": Adds files to the context in read-only mode. Aider will use these files for reference but will not attempt to edit them.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/read-only docs/api.md"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/run"}),": Executes a shell command and optionally adds the output to the chat.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/run ls -l"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/test"}),": Runs the predefined test command for your project.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/test"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"chat--context-management",children:"Chat & Context Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/clear"}),": Clears the entire chat history and drops all files from the context."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/clear-logs"}),": Removes only log messages (info, warnings, errors) from the chat, keeping the user/AI conversation intact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/compact"}),": Summarizes the current conversation to reduce token usage while preserving context."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/copy-context"}),": Copies the current chat context to your clipboard in a markdown format suitable for pasting into web UIs like ChatGPT or Claude."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/tokens"}),": Reports the number of tokens currently being used by the chat context, broken down by files, messages, and repo map."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mode-switching",children:"Mode Switching"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/code"}),": Switches to ",(0,r.jsx)(n.strong,{children:"Code Mode"})," for direct coding requests."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/agent"}),": Switches to ",(0,r.jsx)(n.strong,{children:"Agent Mode"})," for autonomous task execution."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/ask"}),": Switches to ",(0,r.jsx)(n.strong,{children:"Ask Mode"})," to ask questions about the code without making changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/architect"}),": Switches to ",(0,r.jsx)(n.strong,{children:"Architect Mode"})," for planning and executing large-scale changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/context"}),": Switches to ",(0,r.jsx)(n.strong,{children:"Context Mode"}),", where Aider will automatically add relevant files based on your prompt."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"model--aider-control",children:"Model & Aider Control"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/model"}),": Opens the model selector to change the AI model on the fly.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/model openai/gpt-4.1"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/reasoning-effort"}),": Sets the reasoning effort level for the model (e.g., ",(0,r.jsx)(n.code,{children:"low"}),", ",(0,r.jsx)(n.code,{children:"medium"}),", ",(0,r.jsx)(n.code,{children:"high"}),").","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/reasoning-effort high"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/think-tokens"}),": Sets the thinking token budget for models that support it.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/think-tokens 8k"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/undo"}),": Undoes the last git commit if it was made by Aider."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/redo"}),": Re-runs the last user prompt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/edit-last"}),": Allows you to edit your last message and re-submit it."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"other-utilities",children:"Other Utilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/web"}),": Scrapes the content of a URL and adds it to the chat.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"/web https://aider.chat/docs/"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/map"}),": Prints the current repository map in the chat."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/map-refresh"}),": Forces a refresh of the repository map."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/commit"}),": Commits any unstaged changes in your repository."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"/init"}),": Initializes a ",(0,r.jsx)(n.code,{children:"AGENTS.md"})," rule file for your project (only available in Agent Mode)."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);