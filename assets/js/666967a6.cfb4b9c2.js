"use strict";(self.webpackChunkaider_desk_docs=self.webpackChunkaider_desk_docs||[]).push([[964],{7341:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"advanced-features/compact","title":"Compact Command","description":"The /compact command helps you summarize your conversation history with AiderDesk. This is particularly useful for long conversations, as it condenses the previous interactions into a concise summary, allowing the AI agent to maintain context more efficiently without being overwhelmed by excessive history.","source":"@site/docs/advanced-features/compact.md","sourceDirName":"advanced-features","slug":"/advanced-features/compact","permalink":"/docs/advanced-features/compact","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Compact Command","sidebar_label":"Compact"},"sidebar":"docsSidebar","previous":{"title":"REST API","permalink":"/docs/advanced-features/rest-api"},"next":{"title":"Custom Aider Version","permalink":"/docs/customization/custom-aider-version"}}');var o=t(4848),i=t(8453);const r={sidebar_position:5,title:"Compact Command",sidebar_label:"Compact"},c="/compact Command",a={},d=[{value:"What It Does",id:"what-it-does",level:2},{value:"Why It&#39;s Useful",id:"why-its-useful",level:2},{value:"How to Use It",id:"how-to-use-it",level:2},{value:"Model Usage",id:"model-usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"compact-command",children:[(0,o.jsx)(n.code,{children:"/compact"})," Command"]})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"/compact"})," command helps you summarize your conversation history with AiderDesk. This is particularly useful for long conversations, as it condenses the previous interactions into a concise summary, allowing the AI agent to maintain context more efficiently without being overwhelmed by excessive history."]}),"\n",(0,o.jsx)(n.h2,{id:"what-it-does",children:"What It Does"}),"\n",(0,o.jsxs)(n.p,{children:["When you run ",(0,o.jsx)(n.code,{children:"/compact"}),", AiderDesk analyzes the entire conversation history in the current project. It then generates a structured summary that includes:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The primary request and overall intent of the conversation."}),"\n",(0,o.jsx)(n.li,{children:"Key technical concepts discussed."}),"\n",(0,o.jsx)(n.li,{children:"A chronological list of all user messages."}),"\n",(0,o.jsx)(n.li,{children:"Details about files and code sections that were read, created, or modified, including relevant code snippets."}),"\n",(0,o.jsx)(n.li,{children:"A log of errors encountered and their resolutions."}),"\n",(0,o.jsx)(n.li,{children:"The current work being performed and the next logical step."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'After the summary is generated, the conversation history in the current session is replaced with this summary, effectively "compacting" it.'}),"\n",(0,o.jsx)(n.h2,{id:"why-its-useful",children:"Why It's Useful"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Improved Context Management"}),': For lengthy sessions, the AI\'s context window can become full. Compacting the conversation helps keep the most relevant information available to the AI, preventing it from "forgetting" earlier details.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Faster Responses"}),": With a more concise context, the AI can process information more quickly, potentially leading to faster response times."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cost Efficiency"}),": By reducing the amount of historical data sent to the model, it can help manage token usage, which might lead to more cost-efficient interactions with certain LLM providers."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"how-to-use-it",children:"How to Use It"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Run the Command"}),": Type ",(0,o.jsx)(n.code,{children:"/compact"})," into the prompt field and press ",(0,o.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can also provide custom instructions after the command, for example: ",(0,o.jsx)(n.code,{children:"/compact Summarize only the code changes."})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Analysis and Summary"}),": The agent will analyze your conversation history and generate a summary. You will see log messages indicating its progress."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Context Update"}),": Once the summary is complete, your current conversation history will be replaced with the generated summary."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"model-usage",children:"Model Usage"}),"\n",(0,o.jsx)(n.p,{children:"The model used for compaction depends on your current mode:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Agent Mode"}),": When in Agent mode, the ",(0,o.jsx)(n.code,{children:"/compact"})," command utilizes a dedicated agent profile (",(0,o.jsx)(n.code,{children:"compact"}),") to perform the summarization. This profile is optimized for this task and uses the agent's configured model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Other Modes (Code, Ask, Architect, Context)"}),": In these modes, the ",(0,o.jsx)(n.code,{children:"/compact"})," command uses Aider's underlying main model to generate the conversation summary."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);