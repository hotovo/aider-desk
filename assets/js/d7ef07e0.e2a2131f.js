"use strict";(self.webpackChunkaider_desk_docs=self.webpackChunkaider_desk_docs||[]).push([[33],{8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>d});var r=n(6540);const o={},t=r.createContext(o);function s(e){const i=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:i},e.children)}},9840:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"configuration/aider-configuration","title":"Aider Configuration","description":"AiderDesk offers several ways to configure the underlying Aider engine, providing flexibility for advanced users. Configuration is loaded with the following priority (from highest to lowest):","source":"@site/docs/configuration/aider-configuration.md","sourceDirName":"configuration","slug":"/configuration/aider-configuration","permalink":"/aider-desk/docs/configuration/aider-configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Aider Configuration","sidebar_label":"Aider Configuration"},"sidebar":"docsSidebar","previous":{"title":"Settings","permalink":"/aider-desk/docs/configuration/settings"},"next":{"title":"Project Rules","permalink":"/aider-desk/docs/configuration/project-specific-rules"}}');var o=n(4848),t=n(8453);const s={sidebar_position:2,title:"Aider Configuration",sidebar_label:"Aider Configuration"},d="Aider Configuration",c={},l=[{value:"Aider Options",id:"aider-options",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"<code>.aider.conf.yml</code>",id:"aiderconfyml",level:3}];function a(e){const i={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"aider-configuration",children:"Aider Configuration"})}),"\n",(0,o.jsx)(i.p,{children:"AiderDesk offers several ways to configure the underlying Aider engine, providing flexibility for advanced users. Configuration is loaded with the following priority (from highest to lowest):"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsx)(i.li,{children:"Settings configured in the AiderDesk UI."}),"\n",(0,o.jsx)(i.li,{children:"Command-line options specified in AiderDesk settings."}),"\n",(0,o.jsxs)(i.li,{children:["Variables in a ",(0,o.jsx)(i.code,{children:".env"})," file in your project directory."]}),"\n",(0,o.jsxs)(i.li,{children:["Settings in a ",(0,o.jsx)(i.code,{children:".aider.conf.yml"})," file in your project directory."]}),"\n",(0,o.jsxs)(i.li,{children:["Variables in a ",(0,o.jsx)(i.code,{children:".env"})," file in your home directory."]}),"\n",(0,o.jsxs)(i.li,{children:["Settings in a ",(0,o.jsx)(i.code,{children:".aider.conf.yml"})," file in your home directory."]}),"\n",(0,o.jsx)(i.li,{children:"System environment variables."}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"aider-options",children:"Aider Options"}),"\n",(0,o.jsx)(i.p,{children:"You can pass command-line arguments directly to the Aider process."}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["Go to ",(0,o.jsx)(i.strong,{children:"Settings > Aider"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:["In the ",(0,o.jsx)(i.strong,{children:"Options"})," section, enter any valid ",(0,o.jsx)(i.code,{children:"aider-chat"})," command-line flags (e.g., ",(0,o.jsx)(i.code,{children:"--no-auto-commits"}),", ",(0,o.jsx)(i.code,{children:"--map-tokens 8192"}),")."]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["Refer to the ",(0,o.jsx)(i.a,{href:"https://aider.chat/docs/config/options.html",children:"official Aider documentation"})," for a complete list of available options."]}),"\n",(0,o.jsx)(i.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,o.jsx)(i.p,{children:"You can set environment variables for the Aider process, which is useful for configuring API keys and other secrets without hardcoding them."}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["Go to ",(0,o.jsx)(i.strong,{children:"Settings > Aider"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:["In the ",(0,o.jsx)(i.strong,{children:"Environment Variables"})," section, add your variables in the ",(0,o.jsx)(i.code,{children:".env"})," format (e.g., ",(0,o.jsx)(i.code,{children:"OPENAI_API_KEY=your-key-here"}),")."]}),"\n",(0,o.jsx)(i.li,{children:'You can show or hide the content of this field by clicking the "Show Secrets" button.'}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"aiderconfyml",children:(0,o.jsx)(i.code,{children:".aider.conf.yml"})}),"\n",(0,o.jsxs)(i.p,{children:["AiderDesk respects the standard ",(0,o.jsx)(i.code,{children:".aider.conf.yml"})," file. You can place this file in your project's root directory or your home directory to define project-specific or global settings for Aider."]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsxs)(i.strong,{children:["Example ",(0,o.jsx)(i.code,{children:".aider.conf.yml"}),":"]})}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-yaml",children:"model: openai/gpt-4.1\nweak-model: openai/gpt-4o-mini\nedit-format: diff\nauto-commits: false\n"})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);